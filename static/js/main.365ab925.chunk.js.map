{"version":3,"sources":["reportWebVitals.js","store/userSlice.js","store/tabSlice.js","sagas/sagaActions.js","settings/frontend.js","store/diarySlice.js","components/DiaryEditor.jsx","store/diariesSlice.js","store/asyncSlice.js","assets/note.png","components/DiaryListItem.jsx","components/DiaryList.jsx","assets/user.svg","components/Login.jsx","assets/diary2.svg","components/SignUp.jsx","components/App.jsx","settings/backend.js","sagas/createDiarySaga.js","sagas/deleteDiarySaga.js","sagas/loginSaga.js","sagas/readDiariesSaga.js","sagas/signUpSaga.js","sagas/updateDiarySaga.js","sagas/index.js","store/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","userSlice","createSlice","name","initialState","jwt","email","nickname","password","reducers","setJWT","state","action","payload","setUser","selectJWT","user","selectEmail","selectNickname","actions","tabSlice","activeKey","setActiveKey","_state","selectActiveKey","tab","sagaActions","setReadDiaries","diaries","type","frontend","moment","format","createReducer","attribute","diarySlice","datetime","message","setEmail","setDatetime","setMessage","setDiary","reset","diary","selectDatetime","selectMessage","ContainerS","styled","Container","TextareaS","textarea","DiaryEditor","dispatch","useDispatch","useSelector","isNew","_","isEmpty","title","fluid","className","ButtonGroup","Button","variant","size","style","minWidth","maxWidth","onClick","disabled","dt","setCreateDiary","setUpdateDiary","rows","value","onChange","e","currentTarget","diariesSlice","setDiaries","page","apiData","hasError","asyncSlice","signup","login","createDiary","readDiaries","updateDiary","deleteDiary","setSignUpResponse","setLoginResponse","setCreateDiaryResponse","setReadDiariesResponse","setUpdateDiaryResponse","setDeleteDiaryResponse","selectSignUpResponse","async","selectLoginResponse","selectReadDiariesResponse","DivS","div","NotePNG","DiaryListItem","index","setDeleteDiary","padding","DiaryList","get","backgroundColor","backgroundImage","Tab","defaultActiveKey","onSelect","key","Row","Col","sm","paddingTop","Nav","map","idx","Item","Link","eventKey","Content","Pane","InputGroupS","InputGroup","Login","useState","setPassword","Image","src","UserSVG","width","Text","FormControl","placeholder","Alert","hidden","isNil","SignUp","setNickname","fontSize","diarySVG","App","isJWTMissing","Tabs","fill","backend","endpoints","handleCreateDiary","createDiarySaga","handleResponse","body","status","error","isString","store","JSON","stringify","select","JWT","options","method","headers","call","fetch","response","apply","json","resBody","takeLatest","handleDeleteDiary","deleteDiarySaga","toNumber","nextActiveKey","put","handleLogin","loginSaga","handleReadDiaries","readDiariesSaga","url","URL","search","URLSearchParams","toString","handleSignUp","signUpSaga","code","emailKeyPattern","handleUpdateDiary","updateDiarySaga","initiateSagas","sagaMiddleware","run","createSagaMiddleware","configureStore","reducer","asyncReducer","diariesReducer","diaryReducer","tabReducer","userReducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","document","getElementById"],"mappings":"2MAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gECLDQ,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,IAAK,GACLC,MAAO,GACPC,SAAU,GACVC,SAAU,IAEZC,SAAU,CACRC,OAAQ,SAACC,EAAOC,GAAY,IAClBC,EAAYD,EAAZC,QACR,OAAO,2BACFF,GADL,IAEEN,IAAKQ,KAGTC,QAAS,SAACH,EAAOC,GAAY,IAAD,EACyBA,EAA3CC,QAAWP,EADO,EACPA,MAAOC,EADA,EACAA,SAAUC,EADV,EACUA,SACpC,OAAO,2BACFG,GADL,IAEEL,QACAC,WACAC,iBAMKO,EAAY,SAAAJ,GAAK,OAAIA,EAAMK,KAAKX,KAChCY,EAAc,SAAAN,GAAK,OAAIA,EAAMK,KAAKV,OAClCY,EAAiB,SAAAP,GAAK,OAAIA,EAAMK,KAAKT,U,EAGfN,EAAUkB,QAA9BT,E,EAAAA,OAAQI,E,EAAAA,QAERb,IAAf,QCnCamB,EAAWlB,YAAY,CAClCC,KAAM,MACNC,aAAc,CACZiB,UAAW,UAEbZ,SAAU,CACRa,aAAc,SAACC,EAAQX,GAErB,MAAO,CAAES,UADWT,EAAZC,aAMDW,EAAkB,SAAAb,GAAK,OAAIA,EAAMc,IAAIJ,WAEnCC,EAAiBF,EAASD,QAA1BG,aAEAF,IAAf,QCnBaM,EACH,qBADGA,EAEJ,oBAFIA,EAGE,0BAHFA,EAIE,0BAJFA,EAKE,0BALFA,EAME,0BAkBFC,EAAiB,SAAAC,GAAO,MAAK,CACxCC,KAAMH,EACNb,QAASe,I,yCCpBIE,EANE,CACfC,OAAQ,CACNC,OAAQ,2B,gBCANC,EAAgB,SAAAC,GAAS,OAAI,SAACvB,EAAOC,GAAY,IAC7CC,EAAYD,EAAZC,QACR,OAAO,2BACFF,GADL,kBAEGuB,EAAYrB,MAIJsB,EAAajC,YAAY,CACpCC,KAAM,QACNC,aAAc,CACZE,MAAO,GACP8B,SAAU,GACVC,QAAS,IAEX5B,SAAU,CACR6B,SAAUL,EAAc,SACxBM,YAAaN,EAAc,YAC3BO,WAAYP,EAAc,WAC1BQ,SAAU,SAAClB,EAAQX,GAEjB,OADoBA,EAAZC,SAGV6B,MAAO,SAAA/B,GAAK,MAAK,CACfL,MAAOK,EAAML,MACb8B,SAAU,GACVC,QAAS,QAKFpB,EAAc,SAAAN,GAAK,OAAIA,EAAMgC,MAAMrC,OACnCsC,EAAiB,SAAAjC,GAAK,OAAIA,EAAMgC,MAAMP,UACtCS,GAAgB,SAAAlC,GAAK,OAAIA,EAAMgC,MAAMN,S,GAQ9CF,EAAWhB,QALbuB,G,GAAAA,MACAH,G,GAAAA,YACAE,G,GAAAA,SACAH,G,GAAAA,SACAE,G,GAAAA,WAGaL,KAAf,Q,QC1BMW,GAAaC,YAAOC,IAAPD,CAAH,4PAQVE,GAAYF,IAAOG,SAAV,mJAoEAC,GA3DK,WAClB,IAAMC,EAAWC,cACX/C,EAAQgD,YAAYrC,GACpBmB,EAAWkB,YAAYV,GACvBP,EAAUiB,YAAYT,IAEtBU,EAAQC,IAAEC,QAAQrB,IAAaoB,IAAEC,QAAQpB,GAEzCqB,EAAQH,EACV,mBADe,0BAEIxB,IAAOK,GAAUJ,OAAOF,EAASC,OAAOC,QAF5C,KAInB,OACE,gBAACc,GAAD,CAAYa,OAAK,EAACC,UAAU,MAA5B,UACE,gBAACC,EAAA,EAAD,CAAaD,UAAU,kCAAvB,UACE,eAACE,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAK,KACLJ,UAAU,OACVK,MAAO,CAAEC,SAAU,MAAOC,SAAU,OACpCC,QAAS,WACPhB,EAASb,GAAY,KACrBa,EAASZ,GAAW,MAPxB,iBAYA,eAACsB,EAAA,EAAD,CACEC,QAAQ,OACRC,KAAK,KACLJ,UAAU,kBACVK,MAAO,CAAEC,SAAU,MAAOC,SAAU,OACpCE,SAAUb,IAAEC,QAAQpB,GACpB+B,QAAS,WACP,GAAIb,EAAO,CACT,IAAMe,EAAKvC,MAASC,SACdW,EAAQ,CAAErC,QAAO8B,SAAUkC,EAAIjC,WACrCe,EAASb,GAAY+B,IACrBlB,EHvDgB,SAAAT,GAAK,MAAK,CACtCd,KAAMH,EACNb,QAAS8B,GGqDY4B,CAAe5B,SAExBS,EH/CgB,SAAAT,GAAK,MAAK,CACtCd,KAAMH,EACNb,QAAS8B,GG6CY6B,CAAe,CAAElE,QAAO8B,WAAUC,cAbjD,qBAoBF,qBAAIuB,UAAU,mBAAd,SAAkCF,IAClC,sBAAKE,UAAU,mBAAf,SACE,eAACX,GAAD,CACEwB,KAAM,GACNC,MAAOrC,EACPsC,SAAU,SAACC,GAAD,OAAOxB,EAASZ,GAAWoC,EAAEC,cAAcH,iB,2BCtFlDI,GAAe5E,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZiB,UAAW,EACXO,QAAS,IAEXnB,SAAU,CACRa,aAAc,SAACX,EAAOC,GAAY,IACxBC,EAAYD,EAAZC,QACR,OAAO,2BACFF,GADL,IAEEU,UAAWR,KAGfkE,WAAY,SAACpE,EAAOC,GAAY,IACtBC,EAAYD,EAAZC,QACR,OAAO,2BACFF,GADL,IAEEiB,QAASf,QAMJW,GAAkB,SAAAb,GAAK,OAAIA,EAAMiB,QAAQP,W,GAGVyD,GAAa3D,QAA1CG,G,GAAAA,aAEAwD,I,GAFcC,WAEdD,GAAf,SC7BM7C,GAAgB,SAAC+C,GAAD,OAAU,SAACrE,EAAOC,GAAY,IAAD,EAG7CA,EADFC,QAAWoE,EAFoC,EAEpCA,QAASC,EAF2B,EAE3BA,SAAU7C,EAFiB,EAEjBA,QAEhC,OAAO,2BACF1B,GADL,kBAEGqE,EAAO,CAAEC,UAASC,WAAU7C,eAIpB8C,GAAajF,YAAY,CACpCC,KAAM,QACNC,aAAc,CACZgF,OAAQ,GACRC,MAAO,GACPC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,IAEfhF,SAAU,CACRiF,kBAAmBzD,GAAc,UACjC0D,iBAAkB1D,GAAc,SAChC2D,uBAAwB3D,GAAc,eACtC4D,uBAAwB5D,GAAc,eACtC6D,uBAAwB7D,GAAc,eACtC8D,uBAAwB9D,GAAc,kBAI7B+D,GAAuB,SAACrF,GAAD,OAAWA,EAAMsF,MAAMb,QAC9Cc,GAAsB,SAACvF,GAAD,OAAWA,EAAMsF,MAAMZ,OAE7Cc,GAA4B,SAACxF,GAAD,OAAWA,EAAMsF,MAAMV,a,GAW5DJ,GAAWhE,QANbuE,G,GAAAA,kBACAC,G,GAAAA,iBACAC,G,GAAAA,uBACAC,G,GAAAA,uBACAC,G,GAAAA,uBACAC,G,GAAAA,uBAGaZ,MAAf,QChDe,OAA0B,iCCanCiB,GAAOrD,IAAOsD,IAAV,mYACaC,IA4DRC,GAvCO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOnE,EAAc,EAAdA,QACxBe,EAAWC,cAIXV,EADFW,YAAY6C,IADdlB,QAAWrD,QAES4E,GAEtB,OACE,gBAACxD,EAAA,EAAD,WACE,gBAACa,EAAA,EAAD,CAAaD,UAAU,kCAAvB,UACE,eAACE,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAK,KACLJ,UAAU,OACVK,MAAO,CAAEC,SAAU,MAAOC,SAAU,OACpCC,QAAS,kBAAMhB,EPhBK,SAAAT,GAAK,MAAK,CACtCd,KAAMH,EACNb,QAAS8B,GOcuB8D,CAAe9D,KALzC,oBASA,eAACmB,EAAA,EAAD,CACEC,QAAQ,OACRC,KAAK,KACLJ,UAAU,kBACVK,MAAO,CAAEC,SAAU,MAAOC,SAAU,OACpCC,QAAS,WACPhB,EAASX,GAASE,IAClBS,EAAS9B,EAAa,iBAP1B,qBAaF,eAAC8E,GAAD,CAAMxC,UAAU,OAAhB,SACE,sBAAKK,MAAO,CAAEyC,QAAS,QAAvB,SAAkCrE,UCtDpCS,GAAaC,YAAOC,IAAPD,CAAH,gPA0DD4D,GA9CG,WAChB,IAAMvD,EAAWC,cACXhC,EAAYiC,YAAY9B,IAFR,EAGQ8B,YAAY6C,IAAlClB,EAHc,EAGdA,QACFrD,EAJgB,EAGLsD,SACU,GAAK1B,IAAEoD,IAAI3B,EAAS,UAAW,IAC1D,OACE,eAAC,GAAD,CACEtB,OAAK,EACLC,UAAU,MACVK,MAAO,CACL4C,gBAAiB,WACjBC,gBAAiB,mDALrB,SAQE,eAACC,EAAA,EAAI/D,UAAL,CACEgE,iBAAkB,EAClB3F,UAAWA,EACX4F,SAAU,SAACC,GAAD,OAAS9D,EAAS9B,GAAa4F,KAH3C,SAKE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAGpD,MAAO,CAAEqD,WAAY,QAAjC,SACE,eAACC,GAAA,EAAD,CAAKxD,QAAQ,GAAGH,UAAU,cAA1B,SACGJ,IAAEgE,IAAI5F,GAAS,SAACe,EAAO8E,GAAR,OACd,eAACF,GAAA,EAAIG,KAAL,UACE,eAACH,GAAA,EAAII,KAAL,CAAUC,SAAUH,EAApB,SACG1F,IAAOY,EAAMP,UAAUJ,OAAOF,EAASC,OAAOC,WAFpCyF,UAQrB,eAACL,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACN,EAAA,EAAIc,QAAL,UACGrE,IAAEgE,IAAI5F,GAAS,SAACe,EAAO8E,GAAR,OACd,eAACV,EAAA,EAAIe,KAAL,CAAoBF,SAAUH,EAA9B,SACE,eAAC,GAAD,CAAejB,MAAOiB,EAAKpF,QAASM,EAAMN,WAD7BoF,kB,sDC5DhB,OAA0B,iCCsBnC3E,GAAaC,YAAOC,IAAPD,CAAH,gPAQVgF,GAAchF,YAAOiF,KAAPjF,CAAH,iFA0EFkF,GApED,WAAO,IAAD,EACQC,mBAAS,IADjB,oBACX5H,EADW,KACJgC,EADI,OAEc4F,mBAAS,IAFvB,oBAEX1H,EAFW,KAED2H,EAFC,KAIZ/E,EAAWC,cACX9C,EAAW+C,YAAYpC,GALX,EAMYoC,YAAY4C,IAAlChB,EANU,EAMVA,SAAU7C,EANA,EAMAA,QAElB,OACE,gBAAC,GAAD,CAAYsB,OAAK,EAACC,UAAU,MAA5B,UACE,eAACwE,GAAA,EAAD,CAAOC,IAAKC,GAASrE,MAAO,CAAEsE,MAAO,UACrC,oBAAG3E,UAAU,OAAb,8CACA,gBAACmE,GAAD,CAAanE,UAAU,eAAvB,UACE,eAACoE,GAAA,EAAWQ,KAAZ,UACE,eAAC,KAAD,MAGF,eAACC,GAAA,EAAD,CACEC,YAAY,QACZ7G,KAAK,QACL6C,MAAOpE,EACPqE,SAAU,SAACC,GAAD,OAAOtC,EAASsC,EAAEC,cAAcH,aAG9C,gBAACqD,GAAD,CAAanE,UAAU,eAAvB,UACE,eAACoE,GAAA,EAAWQ,KAAZ,UACE,eAAC,KAAD,MAGF,eAACC,GAAA,EAAD,CACEC,YAAY,WACZ7G,KAAK,WACL6C,MAAOlE,EACPmE,SAAU,SAACC,GAAD,OAAOuD,EAAYvD,EAAEC,cAAcH,aAGjD,gBAACb,EAAA,EAAD,CAAaD,UAAU,sCAAvB,UACE,eAACE,EAAA,EAAD,CACEC,QAAQ,YACRH,UAAU,OACVK,MAAO,CAAEC,SAAU,MAAOC,SAAU,OACpCC,QAAS,WACP9B,EAAS,IACT6F,EAAY,KANhB,mBAWA,eAACrE,EAAA,EAAD,CACEC,QAAQ,OACRH,UAAU,kBACVK,MAAO,CAAEC,SAAU,MAAOC,SAAU,OACpCC,QAAS,kBAAMhB,EV1EQ,CAC/BvB,KAAMH,EACNb,QUwEyC,CAAEP,QAAOE,eAJ5C,sBASF,eAACmI,GAAA,EAAD,CACE/E,UAAU,qBACVG,QAASmB,EAAW,SAAW,OAC/B0D,OAAQpF,IAAEqF,MAAM3D,GAHlB,SAKGA,EAAW7C,EAAH,UAAgB9B,EAAhB,yBClGF,OAA0B,mCCsBnCuC,GAAaC,YAAOC,IAAPD,CAAH,4PAQVgF,GAAchF,YAAOiF,KAAPjF,CAAH,iFAiGF+F,GA3FA,WAAO,IAAD,EACOZ,mBAAS,IADhB,oBACZ5H,EADY,KACLgC,EADK,OAEa4F,mBAAS,IAFtB,oBAEZ3H,EAFY,KAEFwI,EAFE,OAGab,mBAAS,IAHtB,oBAGZ1H,EAHY,KAGF2H,EAHE,KAKb/E,EAAWC,cALE,EAMWC,YAAY0C,IAAlCd,EANW,EAMXA,SAAU7C,EANC,EAMDA,QAElB,OACE,gBAAC,GAAD,CAAYsB,OAAK,EAACC,UAAU,MAA5B,UACE,uBAAKA,UAAU,cAAf,UACE,qBAAIA,UAAU,iDAAd,0BAIA,oBAAGA,UAAU,kBAAkBK,MAAO,CAAE+E,SAAU,UAAlD,2DAGA,eAACZ,GAAA,EAAD,CAAOC,IAAKY,GAAUhF,MAAO,CAAEsE,MAAO,UAAY3E,UAAU,SAE5D,oBAAGA,UAAU,OAAb,8CACA,gBAAC,GAAD,CAAaA,UAAU,eAAvB,UACE,eAACoE,GAAA,EAAWQ,KAAZ,UACE,eAAC,KAAD,MAEF,eAACC,GAAA,EAAD,CACEC,YAAY,QACZ7G,KAAK,QACL6C,MAAOpE,EACPqE,SAAU,SAACC,GAAD,OAAOtC,EAASsC,EAAEC,cAAcH,aAI9C,gBAAC,GAAD,CAAad,UAAU,eAAvB,UACE,eAACoE,GAAA,EAAWQ,KAAZ,UACE,eAAC,KAAD,MAEF,eAACC,GAAA,EAAD,CACEC,YAAY,WACZhE,MAAOnE,EACPoE,SAAU,SAACC,GAAD,OAAOmE,EAAYnE,EAAEC,cAAcH,aAIjD,gBAAC,GAAD,CAAad,UAAU,eAAvB,UACE,eAACoE,GAAA,EAAWQ,KAAZ,UACE,eAAC,KAAD,MAEF,eAACC,GAAA,EAAD,CACEC,YAAY,WACZ7G,KAAK,WACL6C,MAAOlE,EACPmE,SAAU,SAACC,GAAD,OAAOuD,EAAYvD,EAAEC,cAAcH,gBAKnD,gBAACb,EAAA,EAAD,CAAaD,UAAU,qCAAvB,UACE,eAACE,EAAA,EAAD,CACEC,QAAQ,YACRH,UAAU,OACVK,MAAO,CAAEC,SAAU,MAAOC,SAAU,OACpCC,QAAS,WACP9B,EAAS,IACTyG,EAAY,IACZZ,EAAY,KAPhB,mBAYA,eAACrE,EAAA,EAAD,CACEC,QAAQ,OACRH,UAAU,kBACVK,MAAO,CAAEC,SAAU,MAAOC,SAAU,OACpCC,QAAS,kBAAMhB,EZrGS,CAChCvB,KAAMH,EACNb,QYmG0C,CAAEP,QAAOC,WAAUC,eAJvD,wBAUF,eAACmI,GAAA,EAAD,CACE/E,UAAU,oBACVG,QAASmB,EAAW,SAAW,UAC/B0D,OAAQpF,IAAEqF,MAAM3D,GAHlB,SAKGA,EAAW7C,EAAU,+BC3Ef6G,GAjCH,WACV,IAAM9F,EAAWC,cACX8F,EAAe3F,IAAEC,QAAQH,YAAYvC,IACrCM,EAAYiC,YAAY9B,GAM9B,OACE,eAACwB,EAAA,EAAD,CAAWW,MAAM,KAAKC,UAAU,OAAhC,SACE,gBAACwF,EAAA,EAAD,CAAM/H,UAAWA,EAAW4F,SAPL,SAACC,GAC1B9D,EAAS9B,EAAa4F,IACV,cAARA,GAAqB9D,EAASzB,MAK0B0H,MAAI,EAA9D,UACE,eAACtC,EAAA,EAAD,CAAKa,SAAS,SAASlE,MAAM,UAA7B,SACE,eAAC,GAAD,MAEF,eAACqD,EAAA,EAAD,CAAKa,SAAS,QAAQlE,MAAM,QAA5B,SACE,eAAC,GAAD,MAEF,eAACqD,EAAA,EAAD,CAAKa,SAAS,YAAYlE,MAAM,aAAaW,SAAU8E,EAAvD,SACE,eAAC,GAAD,MAEF,eAACpC,EAAA,EAAD,CACEa,SAAS,cACTlE,MAAM,eACNW,SAAU8E,EAHZ,SAKE,eAAC,GAAD,Y,yDC/BKG,GARC,CACdC,UAAW,CACTnE,OAAQ,mCACRC,MAAO,kCACP1C,MAAO,oC,aC+BM6G,I,aAcAC,IAtCjB,SAASC,GAAT,GAA2C,IAAjBC,EAAgB,EAAhBA,KAClBzE,EAAsB,MADY,EAAV0E,OAE9B,GAAI1E,EAAU,CAAC,IACL2E,EAAUF,EAAVE,MACFxH,EAAUmB,IAAEsG,SAASD,GAASA,EAAQrG,IAAEoD,IAAIiD,EAAO,eACzD,GAAKrG,IAAEC,QAAQpB,GAIR,CAEL0H,GAAM3G,SACJwC,GAAuB,CACrBX,QAAS0E,EACTzE,WACA7C,QALQ,oCAJZ0H,GAAM3G,SACJwC,GAAuB,CAAEX,QAAS0E,EAAMzE,WAAU7C,kBAatD0H,GAAM3G,SAASwC,GAAuB,CAAEX,QAAS0E,EAAMzE,cAIpD,SAAUsE,GAAV,uFAEO,OAFuB3I,EAA9B,EAA8BA,QAC7B8I,EAAOK,KAAKC,UAAUpJ,GADvB,SAEaqJ,aAAOnJ,GAFpB,OAQY,OANXoJ,EAFD,OAGCC,EAAU,CACdT,OACAU,OAAQ,OACRC,QAAS,CAAE,eAAgB,mBAAoBH,QAN5C,SAQkBI,aAAKC,KAAOlB,GAAQC,UAAU5G,MAAOyH,GARvD,OASW,OADVK,EARD,iBASiBC,aAAMD,EAAUA,EAASE,MAT1C,QASCC,EATD,OAUGhB,EAAWa,EAAXb,OACRF,GAAe,CAAEC,KAAMiB,EAAShB,WAX3B,yCAcA,SAAUH,KAAV,kEACL,OADK,SACCoB,aAAWnJ,EAAyB8H,IADrC,wC,iBCnCGE,I,aA6BOoB,I,aAeAC,IA5CjB,SAAUrB,GAAV,0FAA2BC,EAA3B,EAA2BA,KAAMC,EAAjC,EAAiCA,SACzB1E,EAAsB,MAAX0E,GADnB,gBAGYC,EAAUF,EAAVE,MACFxH,EAAUmB,IAAEsG,SAASD,GAASA,EAAQrG,IAAEoD,IAAIiD,EAAO,eACpDrG,IAAEC,QAAQpB,IAKD,4BACZ0H,GAAM3G,SACJ2C,GAAuB,CACrBd,QAAS0E,EACTzE,WACA7C,QALQ,gCAJZ0H,GAAM3G,SACJ2C,GAAuB,CAAEd,QAAS0E,EAAMzE,WAAU7C,aAP1D,uBAoBiC,OApBjC,KAoBsBmB,IApBtB,UAoBuC0G,aAAO1I,IApB9C,QAwBI,OAxBJ,YAoBUH,EApBV,KAoBwB2J,SApBxB,gBAqBUC,EAAgB5J,EAAY,EAAIA,EAAY,EAAI,EACtD0I,GAAM3G,SAAS2C,GAAuB,CAAEd,QAAS0E,EAAMzE,cACvD6E,GAAM3G,SAASV,MAvBnB,UAwBUwI,aAAIvJ,KAxBd,QAyBI,OAzBJ,UAyBUuJ,aAAI5J,GAAa2J,IAzB3B,yCA6BO,SAAUH,GAAV,2FAGO,OAHuBjK,EAA9B,EAA8BA,QAC3BP,EAAoBO,EAApBP,MAAO8B,EAAavB,EAAbuB,SACTuH,EAAOK,KAAKC,UAAU,CAAE3J,QAAO8B,SAAUL,IAAOK,GAAUJ,WAF3D,SAGakI,aAAOnJ,GAHpB,OASY,OANXoJ,EAHD,OAICC,EAAU,CACdT,OACAU,OAAQ,SACRC,QAAS,CAAE,eAAgB,mBAAoBH,QAP5C,SASkBI,aAAKC,KAAOlB,GAAQC,UAAU5G,MAAOyH,GATvD,OAUW,OADVK,EATD,iBAUiBC,aAAMD,EAAUA,EAASE,MAV1C,QAYL,OAFMC,EAVD,OAWGhB,EAAWa,EAAXb,OAXH,UAYCF,GAAe,CAAEC,KAAMiB,EAAShB,WAZjC,yCAeA,SAAUmB,KAAV,kEACL,OADK,SACCF,aAAWnJ,EAAyBoJ,IADrC,wC,iBCrBUK,I,aAoBAC,IA9CjB,SAAS1B,GAAT,GAA2C,IAAjBC,EAAgB,EAAhBA,KAClBzE,EAAsB,MADY,EAAV0E,OAE9B,GAAI1E,EAAU,CAAC,IACL2E,EAAUF,EAAVE,MACFxH,EAAUmB,IAAEsG,SAASD,GAASA,EAAQrG,IAAEoD,IAAIiD,EAAO,eACzD,GAAKrG,IAAEC,QAAQpB,GAER,CAEL0H,GAAM3G,SACJuC,GAAiB,CACfV,QAAS0E,EACTzE,WACA7C,QALQ,oCAFZ0H,GAAM3G,SAASuC,GAAiB,CAAEV,QAAS0E,EAAMzE,WAAU7C,iBAWxD,CAAC,IAEI/B,EACNqJ,EADF3I,KAAQV,MAEVyJ,GAAM3G,SAASd,GAAShC,IACxByJ,GAAM3G,SAASuC,GAAiB,CAAEV,QAAS0E,EAAMzE,eAI9C,SAAUiG,GAAV,2FAOY,OAPYtK,EAAxB,EAAwBA,QACvB8I,EAAOK,KAAKC,UAAUpJ,GACtBuJ,EAAU,CACdT,OACAU,OAAQ,OACRC,QAAS,CAAE,eAAgB,qBALxB,SAOkBC,aAAKC,KAAOlB,GAAQC,UAAUlE,MAAO+E,GAPvD,OAQW,OADVK,EAPD,gBAQiBC,aAAMD,EAAUA,EAASE,MAR1C,OAYO,OAJNC,EARD,OAUGN,EAAoBG,EAApBH,QAASV,EAAWa,EAAXb,OACT5I,EAAS4J,EAAT5J,KAXH,UAYa0J,aAAMJ,EAASA,EAAQ1D,IAAK,CAAC,QAZ1C,QAYCvG,EAZD,OAaU,MAAXuJ,IACFG,GAAM3G,SAAStC,EAAQE,IACvB+I,GAAM3G,SAAS1C,EAAOL,KAExBqJ,GAAe,CAAEC,KAAMiB,EAAShB,WAjB3B,yCAoBA,SAAUwB,KAAV,kEACL,OADK,SACCP,aAAWnJ,EAAmByJ,IAD/B,wC,iBCtBUE,I,aAeAC,IAvCjB,SAAS5B,GAAT,GAA2C,IAAjBC,EAAgB,EAAhBA,KAClBzE,EAAsB,MADY,EAAV0E,OAE9B,GAAI1E,EAAU,CAAC,IACL2E,EAAUF,EAAVE,MACFxH,EAAUmB,IAAEsG,SAASD,GAASA,EAAQrG,IAAEoD,IAAIiD,EAAO,eACzD,GAAKrG,IAAEC,QAAQpB,GAIR,CAEL0H,GAAM3G,SACJyC,GAAuB,CACrBZ,QAAS0E,EACTzE,WACA7C,QALQ,oCAJZ0H,GAAM3G,SACJyC,GAAuB,CAAEZ,QAAS0E,EAAMzE,WAAU7C,kBAatD0H,GAAM3G,SAASyC,GAAuB,CAAEZ,QAAS0E,EAAMzE,cAIpD,SAAUmG,KAAV,oFACS,OADT,SACenB,aAAOjJ,GADtB,OAIO,OAHNX,EADD,QAECiL,EAAM,IAAIC,IAAIlC,GAAQC,UAAU5G,QAClC8I,OAAS,IAAIC,gBAAgB,CAAEpL,UAASqL,WAHvC,SAIazB,aAAOnJ,GAJpB,OASY,OALXoJ,EAJD,OAKCC,EAAU,CACdC,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoBH,QAP5C,UASkBI,aAAKC,KAAOe,EAAKnB,GATnC,QAUW,OADVK,EATD,iBAUiBC,aAAMD,EAAUA,EAASE,MAV1C,QAUCC,EAVD,OAWGhB,EAAWa,EAAXb,OACRF,GAAe,CAAEC,KAAMiB,EAAShB,WAZ3B,yCAeA,SAAU0B,KAAV,kEACL,OADK,SACCT,aAAWnJ,EAAyB2J,IADrC,wC,iBCHUO,I,aAmBAC,IAvDjB,SAASnC,GAAT,GAA2C,IAAjBC,EAAgB,EAAhBA,KAClBzE,EAAsB,MADY,EAAV0E,OAE9B,GAAI1E,EAAU,CACZ,IAAM4G,EAAOtI,IAAEoD,IAAI+C,EAAM,cACnBoC,EAAkBvI,IAAEoD,IAAI+C,EAAM,0BAC9BtH,EAAUmB,IAAEoD,IAAI+C,EAAM,qBAC5B,GAAa,OAATmC,GAAsC,IAApBC,EAAuB,CAE3ChC,GAAM3G,SACJsC,GAAkB,CAChBT,QAAS0E,EACTzE,WACA7C,QALQ,kCAQP,GAAKmB,IAAEC,QAAQpB,GAEf,CAEL0H,GAAM3G,SACJsC,GAAkB,CAChBT,QAAS0E,EACTzE,WACA7C,QALQ,oCAFZ0H,GAAM3G,SAASsC,GAAkB,CAAET,QAAS0E,EAAMzE,WAAU7C,iBAWzD,CAAC,IAEI/B,EACNqJ,EADF3I,KAAQV,MAEVyJ,GAAM3G,SAASd,GAAShC,IACxByJ,GAAM3G,SAASsC,GAAkB,CAAET,QAAS0E,EAAMzE,eAI/C,SAAU0G,GAAV,2FAOY,OAPa/K,EAAzB,EAAyBA,QACxB8I,EAAOK,KAAKC,UAAUpJ,GACtBuJ,EAAU,CACdT,OACAU,OAAQ,OACRC,QAAS,CAAE,eAAgB,qBALxB,SAOkBC,aAAKC,KAAOlB,GAAQC,UAAUnE,OAAQgF,GAPxD,OAQW,OADVK,EAPD,gBAQiBC,aAAMD,EAAUA,EAASE,MAR1C,OAWO,OAHNC,EARD,OASGN,EAAoBG,EAApBH,QAASV,EAAWa,EAAXb,OACT5I,EAAS4J,EAAT5J,KAVH,UAWa0J,aAAMJ,EAASA,EAAQ1D,IAAK,CAAC,QAX1C,QAWCvG,EAXD,OAYU,MAAXuJ,IACFG,GAAM3G,SAAStC,EAAQE,IACvB+I,GAAM3G,SAAS1C,EAAOL,KAExBqJ,GAAe,CAAEC,KAAMiB,EAAShB,WAhB3B,yCAmBA,SAAUiC,KAAV,kEACL,OADK,SACChB,aAAWnJ,EAAoBkK,IADhC,wC,iBC9BUI,I,aAmBAC,IA3CjB,SAASvC,GAAT,GAA2C,IAAjBC,EAAgB,EAAhBA,KAClBzE,EAAsB,MADY,EAAV0E,OAE9B,GAAI1E,EAAU,CAAC,IACL2E,EAAUF,EAAVE,MACFxH,EAAUmB,IAAEsG,SAASD,GAASA,EAAQrG,IAAEoD,IAAIiD,EAAO,eACzD,GAAKrG,IAAEC,QAAQpB,GAIR,CAEL0H,GAAM3G,SACJ0C,GAAuB,CACrBb,QAAS0E,EACTzE,WACA7C,QALQ,oCAJZ0H,GAAM3G,SACJ0C,GAAuB,CAAEb,QAAS0E,EAAMzE,WAAU7C,kBAatD0H,GAAM3G,SAAS0C,GAAuB,CAAEb,QAAS0E,EAAMzE,cAIpD,SAAU8G,GAAV,6FAOO,OAPuBnL,EAA9B,EAA8BA,QAC3BP,EAA6BO,EAA7BP,MAAO8B,EAAsBvB,EAAtBuB,SAAUC,EAAYxB,EAAZwB,QACnBsH,EAAOK,KAAKC,UAAU,CAC1B3J,QACA8B,SAAUL,IAAOK,GAAUJ,SAC3BK,YALG,SAOa6H,aAAOnJ,GAPpB,OAaY,OANXoJ,EAPD,OAQCC,EAAU,CACdT,OACAU,OAAQ,MACRC,QAAS,CAAE,eAAgB,mBAAoBH,QAX5C,SAakBI,aAAKC,KAAOlB,GAAQC,UAAU5G,MAAOyH,GAbvD,OAcW,OADVK,EAbD,iBAciBC,aAAMD,EAAUA,EAASE,MAd1C,QAcCC,EAdD,OAeGhB,EAAWa,EAAXb,OACRF,GAAe,CAAEC,KAAMiB,EAAShB,WAhB3B,yCAmBA,SAAUqC,KAAV,kEACL,OADK,SACCpB,aAAWnJ,EAAyBsK,IADrC,wCChDP,IASeE,GATO,SAACC,GACrBA,EAAeC,IAAI3C,IACnB0C,EAAeC,IAAIrB,IACnBoB,EAAeC,IAAIhB,IACnBe,EAAeC,IAAId,IACnBa,EAAeC,IAAIP,IACnBM,EAAeC,IAAIH,KCDfE,GAAiBE,eAGjBtC,GAAQuC,YAAe,CAC3BC,QAAS,CACPtG,MAAOuG,GACP5K,QAAS6K,GACT9J,MAAO+J,GACPjL,IAAKkL,EACL3L,KAAM4L,GAGRC,WAAY,SAACC,GAAD,OACVA,IAAuBC,OAAOZ,OAIlCD,GAAcC,IAECpC,U,MCnBfiD,IAASC,OACP,eAAC,IAAD,CAAUlD,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFmD,SAASC,eAAe,SAM1B3N,M","file":"static/js/main.365ab925.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    jwt: '',\r\n    email: '',\r\n    nickname: '',\r\n    password: '',\r\n  },\r\n  reducers: {\r\n    setJWT: (state, action) => {\r\n      const { payload } = action;\r\n      return {\r\n        ...state,\r\n        jwt: payload,\r\n      };\r\n    },\r\n    setUser: (state, action) => {\r\n      const { payload: { email, nickname, password } } = action;\r\n      return {\r\n        ...state,\r\n        email,\r\n        nickname,\r\n        password,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectJWT = state => state.user.jwt;\r\nexport const selectEmail = state => state.user.email;\r\nexport const selectNickname = state => state.user.nickname;\r\nexport const selectPassword = state => state.user.password;\r\n\r\nexport const { setJWT, setUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const tabSlice = createSlice({\r\n  name: 'tab',\r\n  initialState: {\r\n    activeKey: 'signup',\r\n  },\r\n  reducers: {\r\n    setActiveKey: (_state, action) => {\r\n      const { payload } = action;\r\n      return { activeKey: payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectActiveKey = state => state.tab.activeKey;\r\n\r\nexport const { setActiveKey } = tabSlice.actions;\r\n\r\nexport default tabSlice.reducer;\r\n","export const sagaActions = {\r\n  signUp: 'sagaActions/signUp',\r\n  login: 'sagaActions/login',\r\n  createDiary: 'sagaActions/createDiary',\r\n  readDiaries: 'sagaActions/readDiaries',\r\n  updateDiary: 'sagaActions/updateDiary',\r\n  deleteDiary: 'sagaActions/deleteDiary',\r\n};\r\n\r\nexport const setSignUp = user => ({\r\n  type: sagaActions.signUp,\r\n  payload: user,\r\n});\r\n\r\nexport const setLogin = user => ({\r\n  type: sagaActions.login,\r\n  payload: user,\r\n});\r\n\r\nexport const setCreateDiary = diary => ({\r\n  type: sagaActions.createDiary,\r\n  payload: diary,\r\n});\r\n\r\nexport const setReadDiaries = diaries => ({\r\n  type: sagaActions.readDiaries,\r\n  payload: diaries,\r\n});\r\n\r\nexport const setUpdateDiary = diary => ({\r\n  type: sagaActions.updateDiary,\r\n  payload: diary,\r\n});\r\n\r\nexport const setDeleteDiary = diary => ({\r\n  type: sagaActions.deleteDiary,\r\n  payload: diary,\r\n});\r\n","const frontend = {\r\n  moment: {\r\n    format: 'YYYY-MM-DD hh:mm:ssa Z',\r\n  },\r\n};\r\n\r\nexport default frontend;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst createReducer = attribute => (state, action) => {\r\n  const { payload } = action;\r\n  return {\r\n    ...state,\r\n    [attribute]: payload,\r\n  };\r\n};\r\n\r\nexport const diarySlice = createSlice({\r\n  name: 'diary',\r\n  initialState: {\r\n    email: '',\r\n    datetime: '',\r\n    message: '',\r\n  },\r\n  reducers: {\r\n    setEmail: createReducer('email'),\r\n    setDatetime: createReducer('datetime'),\r\n    setMessage: createReducer('message'),\r\n    setDiary: (_state, action) => {\r\n      const { payload } = action;\r\n      return payload;\r\n    },\r\n    reset: state => ({\r\n      email: state.email,\r\n      datetime: '',\r\n      message: '',\r\n    }),\r\n  },\r\n});\r\n\r\nexport const selectEmail = state => state.diary.email;\r\nexport const selectDatetime = state => state.diary.datetime;\r\nexport const selectMessage = state => state.diary.message;\r\n\r\nexport const {\r\n  reset,\r\n  setDatetime,\r\n  setDiary,\r\n  setEmail,\r\n  setMessage,\r\n} = diarySlice.actions;\r\n\r\nexport default diarySlice.reducer;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, ButtonGroup, Container } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nimport { setCreateDiary, setUpdateDiary } from \"../sagas/sagaActions\";\r\nimport frontend from \"../settings/frontend\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  selectDatetime,\r\n  selectEmail,\r\n  selectMessage,\r\n  setDatetime,\r\n  setMessage,\r\n} from \"../store/diarySlice\";\r\n\r\nconst ContainerS = styled(Container)`\r\n  border-radius: 2rem 0 2rem 2rem;\r\n  box-shadow: 20px 20px 60px #bebebe, -20px -20px 60px #ffffff;\r\n  background-color: #d9afd9;\r\n  background-image: linear-gradient(0deg, #d9afd9 0%, #97d9e1 100%);\r\n  text-align: center;\r\n`;\r\n\r\nconst TextareaS = styled.textarea`\r\n  whitespace: pre-line;\r\n  width: 86%;\r\n  border-radius: 2rem;\r\n  border: none;\r\n  padding: 1.2rem;\r\n  outline: none;\r\n`;\r\n\r\nconst DiaryEditor = () => {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(selectEmail);\r\n  const datetime = useSelector(selectDatetime);\r\n  const message = useSelector(selectMessage);\r\n\r\n  const isNew = _.isEmpty(datetime) || _.isEmpty(message);\r\n\r\n  const title = isNew\r\n    ? \"Create New Diary\"\r\n    : `Existing Diary (${moment(datetime).format(frontend.moment.format)})`;\r\n\r\n  return (\r\n    <ContainerS fluid className=\"p-3\">\r\n      <ButtonGroup className=\"d-flex justify-content-end mb-3\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          className=\"mx-1\"\r\n          style={{ minWidth: \"15%\", maxWidth: \"18%\" }}\r\n          onClick={() => {\r\n            dispatch(setDatetime(\"\"));\r\n            dispatch(setMessage(\"\"));\r\n          }}\r\n        >\r\n          New\r\n        </Button>\r\n        <Button\r\n          variant=\"info\"\r\n          size=\"sm\"\r\n          className=\"mx-1 text-white\"\r\n          style={{ minWidth: \"15%\", maxWidth: \"18%\" }}\r\n          disabled={_.isEmpty(message)}\r\n          onClick={() => {\r\n            if (isNew) {\r\n              const dt = moment().format();\r\n              const diary = { email, datetime: dt, message };\r\n              dispatch(setDatetime(dt));\r\n              dispatch(setCreateDiary(diary));\r\n            } else {\r\n              dispatch(setUpdateDiary({ email, datetime, message }));\r\n            }\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </ButtonGroup>\r\n      <h5 className=\"text-center py-3\">{title}</h5>\r\n      <div className=\"text-center pb-5\">\r\n        <TextareaS\r\n          rows={12}\r\n          value={message}\r\n          onChange={(e) => dispatch(setMessage(e.currentTarget.value))}\r\n        />\r\n      </div>\r\n    </ContainerS>\r\n  );\r\n};\r\n\r\nexport default DiaryEditor;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const diariesSlice = createSlice({\r\n  name: 'diaries',\r\n  initialState: {\r\n    activeKey: 0,\r\n    diaries: [],\r\n  },\r\n  reducers: {\r\n    setActiveKey: (state, action) => {\r\n      const { payload } = action;\r\n      return {\r\n        ...state,\r\n        activeKey: payload,\r\n      };\r\n    },\r\n    setDiaries: (state, action) => {\r\n      const { payload } = action;\r\n      return {\r\n        ...state,\r\n        diaries: payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectActiveKey = state => state.diaries.activeKey;\r\nexport const selectDiaries = state => state.diaries.diaries;\r\n\r\nexport const { setActiveKey, setDiaries } = diariesSlice.actions;\r\n\r\nexport default diariesSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst createReducer = (page) => (state, action) => {\r\n  const {\r\n    payload: { apiData, hasError, message },\r\n  } = action;\r\n  return {\r\n    ...state,\r\n    [page]: { apiData, hasError, message },\r\n  };\r\n};\r\n\r\nexport const asyncSlice = createSlice({\r\n  name: \"async\",\r\n  initialState: {\r\n    signup: {},\r\n    login: {},\r\n    createDiary: {},\r\n    readDiaries: {},\r\n    updateDiary: {},\r\n    deleteDiary: {},\r\n  },\r\n  reducers: {\r\n    setSignUpResponse: createReducer(\"signup\"),\r\n    setLoginResponse: createReducer(\"login\"),\r\n    setCreateDiaryResponse: createReducer(\"createDiary\"),\r\n    setReadDiariesResponse: createReducer(\"readDiaries\"),\r\n    setUpdateDiaryResponse: createReducer(\"updateDiary\"),\r\n    setDeleteDiaryResponse: createReducer(\"deleteDiary\"),\r\n  },\r\n});\r\n\r\nexport const selectSignUpResponse = (state) => state.async.signup;\r\nexport const selectLoginResponse = (state) => state.async.login;\r\nexport const selectCreateDiaryResponse = (state) => state.async.login;\r\nexport const selectReadDiariesResponse = (state) => state.async.readDiaries;\r\nexport const selectUpdateDiaryResponse = (state) => state.async.updateDiary;\r\nexport const selectDeleteDiaryResponse = (state) => state.async.deleteDiary;\r\n\r\nexport const {\r\n  setSignUpResponse,\r\n  setLoginResponse,\r\n  setCreateDiaryResponse,\r\n  setReadDiariesResponse,\r\n  setUpdateDiaryResponse,\r\n  setDeleteDiaryResponse,\r\n} = asyncSlice.actions;\r\n\r\nexport default asyncSlice.reducer;\r\n","export default __webpack_public_path__ + \"static/media/note.fc1ebc47.png\";","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ButtonGroup, Container, Button } from \"react-bootstrap\";\r\n\r\nimport { selectReadDiariesResponse } from \"../store/asyncSlice\";\r\nimport { setActiveKey } from \"../store/tabSlice\";\r\nimport { setDeleteDiary } from \"../sagas/sagaActions\";\r\nimport { setDiary } from \"../store/diarySlice\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport NotePNG from \"../assets/note.png\";\r\n\r\nconst DivS = styled.div`\r\n  // background: url(${NotePNG});\r\n  // min-height: 90vh;\r\n  // width: 100%;\r\n  // height: auto;\r\n  // background-position: center;\r\n  // background-repeat: no-repeat;\r\n  // background-size: cover;\r\n  width: 88%;\r\n  margin: 0 auto;\r\n  min-height: 60vh;\r\n  background-color: rgb(227, 235, 238);\r\n  border-radius: 2rem;\r\n  white-space: pre-line;\r\n  line-height: 2rem;\r\n`;\r\n\r\n/**\r\n *\r\n * @param {object} a prop oject that consists of index and message.\r\n * @returns DiaryListItem component.\r\n */\r\nconst DiaryListItem = ({ index, message }) => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    apiData: { diaries },\r\n  } = useSelector(selectReadDiariesResponse);\r\n  const diary = diaries[index];\r\n\r\n  return (\r\n    <Container>\r\n      <ButtonGroup className=\"d-flex justify-content-end mb-3\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          size=\"sm\"\r\n          className=\"mx-1\"\r\n          style={{ minWidth: \"15%\", maxWidth: \"18%\" }}\r\n          onClick={() => dispatch(setDeleteDiary(diary))}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button\r\n          variant=\"info\"\r\n          size=\"sm\"\r\n          className=\"mx-1 text-white\"\r\n          style={{ minWidth: \"15%\", maxWidth: \"18%\" }}\r\n          onClick={() => {\r\n            dispatch(setDiary(diary));\r\n            dispatch(setActiveKey(\"diaryEditor\"));\r\n          }}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </ButtonGroup>\r\n      <DivS className=\"my-5\">\r\n        <div style={{ padding: \"2rem\" }}>{message}</div>\r\n      </DivS>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DiaryListItem;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Nav, Row, Tab, Col } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nimport { selectActiveKey, setActiveKey } from \"../store/diariesSlice\";\r\nimport { selectReadDiariesResponse } from \"../store/asyncSlice\";\r\nimport DiaryListItem from \"./DiaryListItem\";\r\nimport frontend from \"../settings/frontend\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst ContainerS = styled(Container)`\r\n  border-radius: 2rem;\r\n  box-shadow: 20px 20px 60px #bebebe, -20px -20px 60px #ffffff;\r\n  background-color: #d9afd9;\r\n  background-image: linear-gradient(0deg, #d9afd9 0%, #97d9e1 100%);\r\n  text-align: center;\r\n`;\r\n\r\n/**\r\n * DiaryList Component.\r\n * @returns DiaryList React Component.\r\n */\r\nconst DiaryList = () => {\r\n  const dispatch = useDispatch();\r\n  const activeKey = useSelector(selectActiveKey);\r\n  const { apiData, hasError } = useSelector(selectReadDiariesResponse);\r\n  const diaries = hasError ? [] : _.get(apiData, \"diaries\", []);\r\n  return (\r\n    <ContainerS\r\n      fluid\r\n      className=\"p-3\"\r\n      style={{\r\n        backgroundColor: \" #D9AFD9\",\r\n        backgroundImage: \"linear-gradient(0deg, #D9AFD9 0%, #97D9E1 100%)\",\r\n      }}\r\n    >\r\n      <Tab.Container\r\n        defaultActiveKey={0}\r\n        activeKey={activeKey}\r\n        onSelect={(key) => dispatch(setActiveKey(key))}\r\n      >\r\n        <Row>\r\n          <Col sm={3} style={{ paddingTop: \"5rem\" }}>\r\n            <Nav variant=\"\" className=\"flex-column\">\r\n              {_.map(diaries, (diary, idx) => (\r\n                <Nav.Item key={idx}>\r\n                  <Nav.Link eventKey={idx}>\r\n                    {moment(diary.datetime).format(frontend.moment.format)}\r\n                  </Nav.Link>\r\n                </Nav.Item>\r\n              ))}\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              {_.map(diaries, (diary, idx) => (\r\n                <Tab.Pane key={idx} eventKey={idx}>\r\n                  <DiaryListItem index={idx} message={diary.message} />\r\n                </Tab.Pane>\r\n              ))}\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </ContainerS>\r\n  );\r\n};\r\n\r\nexport default DiaryList;\r\n","export default __webpack_public_path__ + \"static/media/user.57af91ae.svg\";","import _ from \"lodash\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Alert,\r\n  Image,\r\n  Button,\r\n  ButtonGroup,\r\n  Container,\r\n  FormControl,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\n\r\nimport { selectLoginResponse } from \"../store/asyncSlice\";\r\nimport { selectNickname } from \"../store/userSlice\";\r\nimport { setLogin } from \"../sagas/sagaActions\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { BsEnvelope, BsLock } from \"react-icons/bs\";\r\n\r\nimport UserSVG from \"../assets/user.svg\";\r\n\r\nconst ContainerS = styled(Container)`\r\n  border-radius: 2rem;\r\n  box-shadow: 20px 20px 60px #bebebe, -20px -20px 60px #ffffff;\r\n  background-color: #d9afd9;\r\n  background-image: linear-gradient(0deg, #d9afd9 0%, #97d9e1 100%);\r\n  text-align: center;\r\n`;\r\n\r\nconst InputGroupS = styled(InputGroup)`\r\n  @media (min-width: 992px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const nickname = useSelector(selectNickname);\r\n  const { hasError, message } = useSelector(selectLoginResponse);\r\n\r\n  return (\r\n    <ContainerS fluid className=\"p-5\">\r\n      <Image src={UserSVG} style={{ width: \"6rem\" }} />\r\n      <p className=\"py-4\">Please enter your Login details.</p>\r\n      <InputGroupS className=\"mb-3 mx-auto\">\r\n        <InputGroup.Text>\r\n          <BsEnvelope />\r\n        </InputGroup.Text>\r\n\r\n        <FormControl\r\n          placeholder=\"Email\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.currentTarget.value)}\r\n        />\r\n      </InputGroupS>\r\n      <InputGroupS className=\"mb-3 mx-auto\">\r\n        <InputGroup.Text>\r\n          <BsLock />\r\n        </InputGroup.Text>\r\n\r\n        <FormControl\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.currentTarget.value)}\r\n        />\r\n      </InputGroupS>\r\n      <ButtonGroup className=\"d-flex justify-content-center mt-4 \">\r\n        <Button\r\n          variant=\"secondary\"\r\n          className=\"mx-1\"\r\n          style={{ minWidth: \"21%\", maxWidth: \"24%\" }}\r\n          onClick={() => {\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n          }}\r\n        >\r\n          Reset\r\n        </Button>\r\n        <Button\r\n          variant=\"info\"\r\n          className=\"mx-1 text-white\"\r\n          style={{ minWidth: \"21%\", maxWidth: \"24%\" }}\r\n          onClick={() => dispatch(setLogin({ email, password }))}\r\n        >\r\n          Login\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Alert\r\n        className=\"mt-3  mx-auto w-75\"\r\n        variant={hasError ? \"danger\" : \"info\"}\r\n        hidden={_.isNil(hasError)}\r\n      >\r\n        {hasError ? message : `${nickname}, welcome back!`}\r\n      </Alert>\r\n    </ContainerS>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/diary2.84006517.svg\";","import _ from \"lodash\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  Alert,\r\n  Button,\r\n  ButtonGroup,\r\n  Container,\r\n  Image,\r\n  FormControl,\r\n  InputGroup,\r\n} from \"react-bootstrap\";\r\n\r\nimport { selectSignUpResponse } from \"../store/asyncSlice\";\r\nimport { setSignUp } from \"../sagas/sagaActions\";\r\n\r\nimport { BsEnvelope, BsLock, BsPerson } from \"react-icons/bs\";\r\nimport styled from \"styled-components\";\r\n\r\nimport diarySVG from \"../assets/diary2.svg\";\r\n\r\nconst ContainerS = styled(Container)`\r\n  text-align: center;\r\n  border-radius: 0 2rem 2rem 2rem;\r\n  box-shadow: 20px 20px 60px #bebebe, -20px -20px 60px #ffffff;\r\n  background-color: #d9afd9;\r\n  background-image: linear-gradient(0deg, #d9afd9 0%, #97d9e1 100%);\r\n`;\r\n\r\nconst InputGroupS = styled(InputGroup)`\r\n  @media (min-width: 992px) {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const { hasError, message } = useSelector(selectSignUpResponse);\r\n\r\n  return (\r\n    <ContainerS fluid className=\"p-5\">\r\n      <div className=\"text-center\">\r\n        <h1 className=\"h2-responsive pt-3 text-white font-weight-bold\">\r\n          Simple Diary\r\n        </h1>\r\n\r\n        <p className=\"my-3 text-white\" style={{ fontSize: \"1.2rem\" }}>\r\n          This app for the ones who love writing Diary.\r\n        </p>\r\n        <Image src={diarySVG} style={{ width: \"5.4rem\" }} className=\"py-4\" />\r\n\r\n        <p className=\"mb-2\">Please sign up before you start.</p>\r\n        <InputGroupS className=\"py-2 mx-auto\">\r\n          <InputGroup.Text>\r\n            <BsEnvelope />\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.currentTarget.value)}\r\n          />\r\n        </InputGroupS>\r\n\r\n        <InputGroupS className=\"py-2 mx-auto\">\r\n          <InputGroup.Text>\r\n            <BsPerson />\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            placeholder=\"Nickname\"\r\n            value={nickname}\r\n            onChange={(e) => setNickname(e.currentTarget.value)}\r\n          />\r\n        </InputGroupS>\r\n\r\n        <InputGroupS className=\"py-2 mx-auto\">\r\n          <InputGroup.Text>\r\n            <BsLock />\r\n          </InputGroup.Text>\r\n          <FormControl\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.currentTarget.value)}\r\n          />\r\n        </InputGroupS>\r\n      </div>\r\n\r\n      <ButtonGroup className=\"d-flex justify-content-center my-2\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          className=\"mx-1\"\r\n          style={{ minWidth: \"21%\", maxWidth: \"24%\" }}\r\n          onClick={() => {\r\n            setEmail(\"\");\r\n            setNickname(\"\");\r\n            setPassword(\"\");\r\n          }}\r\n        >\r\n          Reset\r\n        </Button>\r\n        <Button\r\n          variant=\"info\"\r\n          className=\"mx-1 text-white\"\r\n          style={{ minWidth: \"21%\", maxWidth: \"24%\" }}\r\n          onClick={() => dispatch(setSignUp({ email, nickname, password }))} // dispatchされるactionはsetSignUpが呼び起こされた後の返り値となる　setSignUp= action Creater 試図\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </ButtonGroup>\r\n\r\n      <Alert\r\n        className=\"mt-3 mx-auto w-75\"\r\n        variant={hasError ? \"danger\" : \"success\"}\r\n        hidden={_.isNil(hasError)}\r\n      >\r\n        {hasError ? message : \"Sign up is successful!\"}\r\n      </Alert>\r\n    </ContainerS>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport React from \"react\";\r\nimport { Container, Tab, Tabs } from \"react-bootstrap\";\r\n\r\nimport { selectJWT } from \"../store/userSlice\";\r\nimport { selectActiveKey, setActiveKey } from \"../store/tabSlice\";\r\nimport { setReadDiaries } from \"../sagas/sagaActions\";\r\nimport DiaryEditor from \"../components/DiaryEditor\";\r\nimport DiaryList from \"../components/DiaryList\";\r\nimport Login from \"../components/Login\";\r\nimport SignUp from \"../components/SignUp\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const isJWTMissing = _.isEmpty(useSelector(selectJWT));\r\n  const activeKey = useSelector(selectActiveKey);\r\n  const handleTabSelection = (key) => {\r\n    dispatch(setActiveKey(key));\r\n    if (key === \"diaryList\") dispatch(setReadDiaries());\r\n  };\r\n\r\n  return (\r\n    <Container fluid=\"md\" className=\"mt-3\">\r\n      <Tabs activeKey={activeKey} onSelect={handleTabSelection} fill>\r\n        <Tab eventKey=\"signup\" title=\"Sign Up\">\r\n          <SignUp />\r\n        </Tab>\r\n        <Tab eventKey=\"login\" title=\"Login\">\r\n          <Login />\r\n        </Tab>\r\n        <Tab eventKey=\"diaryList\" title=\"Diary List\" disabled={isJWTMissing}>\r\n          <DiaryList />\r\n        </Tab>\r\n        <Tab\r\n          eventKey=\"diaryEditor\"\r\n          title=\"Diary Editor\"\r\n          disabled={isJWTMissing}\r\n        >\r\n          <DiaryEditor />\r\n        </Tab>\r\n      </Tabs>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const backend = {\r\n  endpoints: {\r\n    signup: \"http://localhost:9999/api/signup\",\r\n    login: \"http://localhost:9999/api/login\",\r\n    diary: \"http://localhost:9999/api/diary\",\r\n  },\r\n};\r\n\r\nexport default backend;\r\n","import _ from \"lodash\";\r\nimport fetch from \"isomorphic-fetch\";\r\n\r\nimport { apply, call, select, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport { sagaActions } from \"./sagaActions\";\r\nimport { selectJWT } from \"../store/userSlice\";\r\nimport { setCreateDiaryResponse } from \"../store/asyncSlice\";\r\nimport backend from \"../settings/backend\";\r\nimport store from \"../store\";\r\n\r\nfunction handleResponse({ body, status }) {\r\n  const hasError = status !== 200;\r\n  if (hasError) {\r\n    const { error } = body;\r\n    const message = _.isString(error) ? error : _.get(error, \"[0].message\");\r\n    if (!_.isEmpty(message)) {\r\n      store.dispatch(\r\n        setCreateDiaryResponse({ apiData: body, hasError, message })\r\n      );\r\n    } else {\r\n      const msg = \"Unexpected error occurred\";\r\n      store.dispatch(\r\n        setCreateDiaryResponse({\r\n          apiData: body,\r\n          hasError,\r\n          message: msg,\r\n        })\r\n      );\r\n    }\r\n  } else {\r\n    store.dispatch(setCreateDiaryResponse({ apiData: body, hasError }));\r\n  }\r\n}\r\n\r\nexport function* handleCreateDiary({ payload }) {\r\n  const body = JSON.stringify(payload);\r\n  const JWT = yield select(selectJWT);\r\n  const options = {\r\n    body,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\", JWT },\r\n  };\r\n  const response = yield call(fetch, backend.endpoints.diary, options);\r\n  const resBody = yield apply(response, response.json);\r\n  const { status } = response;\r\n  handleResponse({ body: resBody, status });\r\n}\r\n\r\nexport function* createDiarySaga() {\r\n  yield takeLatest(sagaActions.createDiary, handleCreateDiary);\r\n}\r\n","import _ from \"lodash\";\r\nimport fetch from \"isomorphic-fetch\";\r\n\r\nimport { apply, call, put, select, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport { reset } from \"../store/diarySlice\";\r\nimport { sagaActions, setReadDiaries } from \"./sagaActions\";\r\nimport { selectActiveKey, setActiveKey } from \"../store/diariesSlice\";\r\nimport { selectJWT } from \"../store/userSlice\";\r\nimport { setDeleteDiaryResponse } from \"../store/asyncSlice\";\r\nimport backend from \"../settings/backend\";\r\nimport moment from \"moment\";\r\nimport store from \"../store\";\r\n\r\nfunction* handleResponse({ body, status }) {\r\n  const hasError = status !== 200;\r\n  if (hasError) {\r\n    const { error } = body;\r\n    const message = _.isString(error) ? error : _.get(error, \"[0].message\");\r\n    if (!_.isEmpty(message)) {\r\n      store.dispatch(\r\n        setDeleteDiaryResponse({ apiData: body, hasError, message })\r\n      );\r\n    } else {\r\n      const msg = \"Unexpected error occurred\";\r\n      store.dispatch(\r\n        setDeleteDiaryResponse({\r\n          apiData: body,\r\n          hasError,\r\n          message: msg,\r\n        })\r\n      );\r\n    }\r\n  } else {\r\n    const activeKey = _.toNumber(yield select(selectActiveKey));\r\n    const nextActiveKey = activeKey > 0 ? activeKey - 1 : 0;\r\n    store.dispatch(setDeleteDiaryResponse({ apiData: body, hasError }));\r\n    store.dispatch(reset());\r\n    yield put(setReadDiaries());\r\n    yield put(setActiveKey(nextActiveKey));\r\n  }\r\n}\r\n\r\nexport function* handleDeleteDiary({ payload }) {\r\n  const { email, datetime } = payload;\r\n  const body = JSON.stringify({ email, datetime: moment(datetime).format() });\r\n  const JWT = yield select(selectJWT);\r\n  const options = {\r\n    body,\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\", JWT },\r\n  };\r\n  const response = yield call(fetch, backend.endpoints.diary, options);\r\n  const resBody = yield apply(response, response.json);\r\n  const { status } = response;\r\n  yield handleResponse({ body: resBody, status });\r\n}\r\n\r\nexport function* deleteDiarySaga() {\r\n  yield takeLatest(sagaActions.deleteDiary, handleDeleteDiary);\r\n}\r\n","import _ from \"lodash\";\r\nimport { apply, call, takeLatest } from \"redux-saga/effects\";\r\nimport fetch from \"isomorphic-fetch\";\r\n\r\nimport { sagaActions } from \"./sagaActions\";\r\nimport { setEmail } from \"../store/diarySlice\";\r\nimport { setJWT, setUser } from \"../store/userSlice\";\r\nimport { setLoginResponse } from \"../store/asyncSlice\";\r\nimport backend from \"../settings/backend\";\r\nimport store from \"../store\";\r\n\r\nfunction handleResponse({ body, status }) {\r\n  const hasError = status !== 200;\r\n  if (hasError) {\r\n    const { error } = body;\r\n    const message = _.isString(error) ? error : _.get(error, \"[0].message\");\r\n    if (!_.isEmpty(message)) {\r\n      store.dispatch(setLoginResponse({ apiData: body, hasError, message }));\r\n    } else {\r\n      const msg = \"Unexpected error occurred\";\r\n      store.dispatch(\r\n        setLoginResponse({\r\n          apiData: body,\r\n          hasError,\r\n          message: msg,\r\n        })\r\n      );\r\n    }\r\n  } else {\r\n    const {\r\n      user: { email },\r\n    } = body;\r\n    store.dispatch(setEmail(email));\r\n    store.dispatch(setLoginResponse({ apiData: body, hasError }));\r\n  }\r\n}\r\n\r\nexport function* handleLogin({ payload }) {\r\n  const body = JSON.stringify(payload);\r\n  const options = {\r\n    body,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  const response = yield call(fetch, backend.endpoints.login, options);\r\n  const resBody = yield apply(response, response.json);\r\n\r\n  const { headers, status } = response;\r\n  const { user } = resBody;\r\n  const jwt = yield apply(headers, headers.get, [\"JWT\"]);\r\n  if (status === 200) {\r\n    store.dispatch(setUser(user));\r\n    store.dispatch(setJWT(jwt));\r\n  }\r\n  handleResponse({ body: resBody, status });\r\n}\r\n\r\nexport function* loginSaga() {\r\n  yield takeLatest(sagaActions.login, handleLogin);\r\n}\r\n","import _ from \"lodash\";\r\nimport fetch from \"isomorphic-fetch\";\r\n\r\nimport { apply, call, select, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport { sagaActions } from \"../sagas/sagaActions\";\r\nimport { selectJWT, selectEmail } from \"../store/userSlice\";\r\nimport { setReadDiariesResponse } from \"../store/asyncSlice\";\r\nimport backend from \"../settings/backend\";\r\nimport store from \"../store\";\r\n\r\nfunction handleResponse({ body, status }) {\r\n  const hasError = status !== 200;\r\n  if (hasError) {\r\n    const { error } = body;\r\n    const message = _.isString(error) ? error : _.get(error, \"[0].message\");\r\n    if (!_.isEmpty(message)) {\r\n      store.dispatch(\r\n        setReadDiariesResponse({ apiData: body, hasError, message })\r\n      );\r\n    } else {\r\n      const msg = \"Unexpected error occurred\";\r\n      store.dispatch(\r\n        setReadDiariesResponse({\r\n          apiData: body,\r\n          hasError,\r\n          message: msg,\r\n        })\r\n      );\r\n    }\r\n  } else {\r\n    store.dispatch(setReadDiariesResponse({ apiData: body, hasError }));\r\n  }\r\n}\r\n\r\nexport function* handleReadDiaries() {\r\n  const email = yield select(selectEmail);\r\n  const url = new URL(backend.endpoints.diary);\r\n  url.search = new URLSearchParams({ email }).toString();\r\n  const JWT = yield select(selectJWT);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\", JWT },\r\n  };\r\n  const response = yield call(fetch, url, options);\r\n  const resBody = yield apply(response, response.json);\r\n  const { status } = response;\r\n  handleResponse({ body: resBody, status });\r\n}\r\n\r\nexport function* readDiariesSaga() {\r\n  yield takeLatest(sagaActions.readDiaries, handleReadDiaries);\r\n}\r\n","import _ from \"lodash\";\r\nimport { apply, call, takeLatest } from \"redux-saga/effects\";\r\nimport fetch from \"isomorphic-fetch\";\r\n\r\nimport { sagaActions } from \"./sagaActions\";\r\nimport { setEmail } from \"../store/diarySlice\";\r\nimport { setJWT, setUser } from \"../store/userSlice\";\r\nimport { setSignUpResponse } from \"../store/asyncSlice\";\r\nimport backend from \"../settings/backend\";\r\nimport store from \"../store\";\r\n\r\nfunction handleResponse({ body, status }) {\r\n  const hasError = status !== 200;\r\n  if (hasError) {\r\n    const code = _.get(body, \"error.code\");\r\n    const emailKeyPattern = _.get(body, \"error.keyPattern.email\");\r\n    const message = _.get(body, \"error.[0].message\");\r\n    if (code === 11000 && emailKeyPattern === 1) {\r\n      const msg = \"Email address is in use\";\r\n      store.dispatch(\r\n        setSignUpResponse({\r\n          apiData: body,\r\n          hasError,\r\n          message: msg,\r\n        })\r\n      );\r\n    } else if (!_.isEmpty(message)) {\r\n      store.dispatch(setSignUpResponse({ apiData: body, hasError, message }));\r\n    } else {\r\n      const msg = \"Unexpected error occurred\";\r\n      store.dispatch(\r\n        setSignUpResponse({\r\n          apiData: body,\r\n          hasError,\r\n          message: msg,\r\n        })\r\n      );\r\n    }\r\n  } else {\r\n    const {\r\n      user: { email },\r\n    } = body;\r\n    store.dispatch(setEmail(email));\r\n    store.dispatch(setSignUpResponse({ apiData: body, hasError }));\r\n  }\r\n}\r\n\r\nexport function* handleSignUp({ payload }) {\r\n  const body = JSON.stringify(payload);\r\n  const options = {\r\n    body,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  const response = yield call(fetch, backend.endpoints.signup, options);\r\n  const resBody = yield apply(response, response.json);\r\n  const { headers, status } = response;\r\n  const { user } = resBody;\r\n  const jwt = yield apply(headers, headers.get, [\"JWT\"]);\r\n  if (status === 200) {\r\n    store.dispatch(setUser(user));\r\n    store.dispatch(setJWT(jwt));\r\n  }\r\n  handleResponse({ body: resBody, status });\r\n}\r\n\r\nexport function* signUpSaga() {\r\n  yield takeLatest(sagaActions.signUp, handleSignUp);\r\n}\r\n\r\n// fetch(signupURL, options) === call(fetch, signupURL, options)\r\n// response.json() === apply(response, response.json)\r\n","import _ from \"lodash\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport moment from \"moment\";\r\n\r\nimport { apply, call, select, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport { sagaActions } from \"../sagas/sagaActions\";\r\nimport { selectJWT } from \"../store/userSlice\";\r\nimport { setUpdateDiaryResponse } from \"../store/asyncSlice\";\r\nimport backend from \"../settings/backend\";\r\nimport store from \"../store\";\r\n\r\nfunction handleResponse({ body, status }) {\r\n  const hasError = status !== 200;\r\n  if (hasError) {\r\n    const { error } = body;\r\n    const message = _.isString(error) ? error : _.get(error, \"[0].message\");\r\n    if (!_.isEmpty(message)) {\r\n      store.dispatch(\r\n        setUpdateDiaryResponse({ apiData: body, hasError, message })\r\n      );\r\n    } else {\r\n      const msg = \"Unexpected error occurred\";\r\n      store.dispatch(\r\n        setUpdateDiaryResponse({\r\n          apiData: body,\r\n          hasError,\r\n          message: msg,\r\n        })\r\n      );\r\n    }\r\n  } else {\r\n    store.dispatch(setUpdateDiaryResponse({ apiData: body, hasError }));\r\n  }\r\n}\r\n\r\nexport function* handleUpdateDiary({ payload }) {\r\n  const { email, datetime, message } = payload;\r\n  const body = JSON.stringify({\r\n    email,\r\n    datetime: moment(datetime).format(),\r\n    message,\r\n  });\r\n  const JWT = yield select(selectJWT);\r\n  const options = {\r\n    body,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\", JWT },\r\n  };\r\n  const response = yield call(fetch, backend.endpoints.diary, options);\r\n  const resBody = yield apply(response, response.json);\r\n  const { status } = response;\r\n  handleResponse({ body: resBody, status });\r\n}\r\n\r\nexport function* updateDiarySaga() {\r\n  yield takeLatest(sagaActions.updateDiary, handleUpdateDiary);\r\n}\r\n","import { createDiarySaga } from \"./createDiarySaga\";\r\nimport { deleteDiarySaga } from \"./deleteDiarySaga\";\r\nimport { loginSaga } from \"./loginSaga\";\r\nimport { readDiariesSaga } from \"./readDiariesSaga\";\r\nimport { signUpSaga } from \"./signUpSaga\";\r\nimport { updateDiarySaga } from \"./updateDiarySaga\";\r\n\r\nconst initiateSagas = (sagaMiddleware) => {\r\n  sagaMiddleware.run(createDiarySaga);\r\n  sagaMiddleware.run(deleteDiarySaga);\r\n  sagaMiddleware.run(loginSaga);\r\n  sagaMiddleware.run(readDiariesSaga);\r\n  sagaMiddleware.run(signUpSaga);\r\n  sagaMiddleware.run(updateDiarySaga);\r\n};\r\n\r\nexport default initiateSagas;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\n// import slices\r\nimport asyncReducer from \"./asyncSlice\";\r\nimport diariesReducer from \"./diariesSlice\";\r\nimport diaryReducer from \"./diarySlice\";\r\nimport tabReducer from \"./tabSlice\";\r\nimport userReducer from \"./userSlice\";\r\n\r\nimport initiateSagas from \"../sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// register reducers\r\nconst store = configureStore({\r\n  reducer: {\r\n    async: asyncReducer,\r\n    diaries: diariesReducer,\r\n    diary: diaryReducer,\r\n    tab: tabReducer,\r\n    user: userReducer,\r\n  },\r\n  // register sagaMiddleware\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(sagaMiddleware),\r\n});\r\n\r\n// register\r\ninitiateSagas(sagaMiddleware);\r\n\r\nexport default store;\r\n","import { Provider } from \"react-redux\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\n\nimport App from \"./components/App\";\nimport store from \"./store\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}